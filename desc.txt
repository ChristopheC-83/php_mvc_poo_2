toujours la meme chose

dans la carte, on va créer proposer un chemin

nopus allons non pas dans l'index mais dans l'index dédié aux personnages

ce cjemin nous envoie au controller qui nous proposera une vue similaire à celle de la création d'un personnage mais avec qq modif

déjà on récupère les données de ce personnage en particulier, il nous faut une nouvelle méthode getOneCharacter et où ?
dans le charactersModel

on n'a pas à chercher, les classes nous indique où ranger les choses !

on duplique getAllCharacters
on change le nom
on met l'id en parametre
on ajoute le filtre WHERE
on lie id avec bindParam

dans le controller, 
on met à jour la méthode

on crée le fichier modifyCharacterPage.php dans les vue
on lance un test
<?php UTILITIES::showArray($character)   ?>

ça fonctionne, même l'onglet est personnalisé !
on commente showArray

on peut copier coller le formulair ede création d'un personnage
dans chaque input, on ajoute la value
en début on pense à ajouter l'id dans un input hidden pour dire au model qui il devra modifier

on adapte le side avec une ternaire pour afficher le bon side et on envoie tout ça à 
<?=ROOT?>personnages/update_character

dans cet index dédié, on récupère les données
on teste avec showArray

c'est bon, on securise et on valide que rien n'est vide avant d'envoyer au controller
on copie colle ce qu'il y a dans create
on ajoute id
on pourrait enlever les tests sur side qui ne pourra pas etre vide puisqu'il y a déjà au moins une valeur
on change l'adresse de retour si message d'erreur
comme notre id passe par POST et non GET, on est obligé de créé un pseudo-formulaire dans notre message d'erreur

On teste une modif ok 
une création
une suppression


Nous avons terminé notre CRUD en MVC organisé grace à la POO

nous pouvons déployer !

création d'un sous dommaine dans hostinger
gestionniare de fichiers
on entre dans le dossier qui porte le nom du sous domaine, ou à la racine si site principal

on copie les dossiers et fichiers necessaires... et c'est parti !


nous avons vu la segmentation par la poo
organiser son fichier index.php
nous avons vu les class abstraites qui ne s'instancie pas mais envoie des données / methodes à ses filles 
des methodes utilitaires statiques pour appeler ces methodes facilement de partout

petite amélioration après réflexion
le charactercontroller pour etre découpé en chractercontrollerviex et charactercontrollerlogic
pour différencier le controller qui envoie des vues et celui qui traite les informations.

le charactersmodel aussi avec d'un acoté les appels, de l'autre les autres opération

A chacun de modifier comme il le souhaite.

Ce que je vous propose
c'est de faire un CRUD des sides 
si dans phpmyadmin j'ajoute angel
je peux modifier mon personnage et ça lui propose le side angel.
Nous avions créer à l'avance la classe css equivalente.

Et si vous faisiez un CRUD de ces sides ?

De ce propjet, je réaliserai des fonctionnallités php 
j'ai mes petites idées mais si vous avez une envie, un besoin , dans la mesure du possible et de mes compétences
comme disais un grand philosophe
"audio gaire.mp3"

Salutations distinguées les compagnons de code !